PleYou are given a task to integrate an existing React component in the codebase

The codebase should support:
- shadcn project structure  
- Tailwind CSS
- Typescript

If it doesn't, provide instructions on how to setup project via shadcn CLI, install Tailwind or Typescript.

Determine the default path for components and styles. 
If default path for components is not /components/ui, provide instructions on why it's important to create this folder
Copy-paste this component to /components/ui folder:
```tsx
scroll-progress-bar.tsx
"use client";

import React from "react";
import {
  motion,
  useMotionValueEvent,
  useScroll,
  useTransform,
} from "framer-motion";
import { cn } from "@/lib/utils";

interface ScrollProgressBarType {
  type?: "circle" | "bar";
  position?: "top-right" | "bottom-right" | "top-left" | "bottom-left";
  color?: string;
  strokeSize?: number;
  showPercentage?: boolean;
}

export default function ScrollProgressBar({
  type = "circle",
  position = "bottom-right",
  color = "hsl(var(--primary))",
  strokeSize = 2,
  showPercentage = false,
}: ScrollProgressBarType) {
  const { scrollYProgress } = useScroll();

  const scrollPercentage = useTransform(scrollYProgress, [0, 1], [0, 100]);

  const [percentage, setPercentage] = React.useState(0);

  useMotionValueEvent(scrollPercentage, "change", (latest) => {
    setPercentage(Math.round(latest));
  });

  if (type === "bar") {
    return (
      <div
        className="fixed start-0 end-0 top-0 pointer-events-none"
        style={{ height: `${strokeSize + 2}px` }}
      >
        <span
          className="bg-primary h-full w-full block"
          style={{
            backgroundColor: color,
            width: `${percentage}%`,
          }}
        ></span>
      </div>
    );
  }

  return (
    <div
      className={cn("fixed flex items-center justify-center", {
        "top-0 end-0": position === "top-right",
        "bottom-0 end-0": position === "bottom-right",
        "top-0 start-0": position === "top-left",
        "bottom-0 start-0": position === "bottom-left",
      })}
    >
      {percentage > 0 && (
        <>
          <svg width="100" height="100" viewBox="0 0 100 100">
            <circle
              cx="50"
              cy="50"
              r="30"
              fill="none"
              strokeWidth={strokeSize}
            />
            <motion.circle
              cx="50"
              cy="50"
              r="30"
              pathLength="1"
              stroke={color}
              fill="none"
              strokeDashoffset="0"
              strokeWidth={strokeSize}
              style={{ pathLength: scrollYProgress }}
            />
          </svg>
          {showPercentage && (
            <span className="text-sm absolute ml-2">{percentage}%</span>
          )}
        </>
      )}
    </div>
  );
}


demo.tsx
"use client";

import ScrollProgressBar from "@/components/ui/scroll-progress-bar";

function ScrollProgressBarCircleDemo() {
  return (
    <div className="min-h-[200vh] w-full relative">
      <div className="fixed inset-0 flex items-center justify-center pointer-events-none">
        <div className="w-full max-w-5xl mx-auto p-4">
          <div className="rounded-lg p-8 text-xl w-full h-[500px] border border-neutral-200 dark:border-neutral-800 bg-white/50 dark:bg-black/50 backdrop-blur-sm">
            <h2 className="text-2xl font-bold mb-4">Circle Progress Indicator</h2>
            <p className="mb-4">Scroll down to see the circle progress indicator in action.</p>
            <p className="mb-4">This version shows the percentage and uses the default circle type.</p>
          </div>
        </div>
      </div>
      <ScrollProgressBar showPercentage />
      <div className="h-[200vh]" aria-hidden="true" />
    </div>
  )
}

function ScrollProgressBarTopDemo() {
  return (
    <div className="min-h-[200vh] w-full relative">
      <div className="fixed inset-0 flex items-center justify-center pointer-events-none">
        <div className="w-full max-w-5xl mx-auto p-4">
          <div className="rounded-lg p-8 text-xl w-full h-[500px] border border-neutral-200 dark:border-neutral-800 bg-white/50 dark:bg-black/50 backdrop-blur-sm">
            <h2 className="text-2xl font-bold mb-4">Top Bar Progress Indicator</h2>
            <p className="mb-4">Scroll down to see the top bar progress indicator in action.</p>
            <p className="mb-4">This version uses the bar type with a custom color.</p>
          </div>
        </div>
      </div>
      <ScrollProgressBar type="bar" color="#3b82f6" strokeSize={4} />
      <div className="h-[200vh]" aria-hidden="true" />
    </div>
  )
}

function ScrollProgressBarCustomDemo() {
  return (
    <div className="min-h-[200vh] w-full relative">
      <div className="fixed inset-0 flex items-center justify-center pointer-events-none">
        <div className="w-full max-w-5xl mx-auto p-4">
          <div className="rounded-lg p-8 text-xl w-full h-[500px] border border-neutral-200 dark:border-neutral-800 bg-white/50 dark:bg-black/50 backdrop-blur-sm">
            <h2 className="text-2xl font-bold mb-4">Custom Position Progress</h2>
            <p className="mb-4">Scroll down to see the circle progress indicator in action.</p>
            <p className="mb-4">This version uses a custom position and color.</p>
          </div>
        </div>
      </div>
      <ScrollProgressBar 
        position="top-left"
        color="#10b981"
        strokeSize={3}
        showPercentage
      />
      <div className="h-[200vh]" aria-hidden="true" />
    </div>
  )
}

export { ScrollProgressBarCircleDemo, ScrollProgressBarTopDemo, ScrollProgressBarCustomDemo }
```

Install NPM dependencies:
```bash
framer-motion
```

Implementation Guidelines
 1. Analyze the component structure and identify all required dependencies
 2. Review the component's argumens and state
 3. Identify any required context providers or hooks and install them
 4. Questions to Ask
 - What data/props will be passed to this component?
 - Are there any specific state management requirements?
 - Are there any required assets (images, icons, etc.)?
 - What is the expected responsive behavior?
 - What is the best place to use this component in the app?

Steps to integrate
 0. Copy paste all the code above in the correct directories
 1. Install external dependencies
 2. Fill image assets with Unsplash stock images you know exist
 3. Use lucide-react icons for svgs or logos if component requires them
ase paste the scroll progress bar circle code from 21st dev here.

I will analyze this code to determine:
1. The HTML structure needed
2. The CSS styling requirements
3. The JavaScript functionality
4. How to integrate it with your existing test page

Once you paste the code, I'll review it and let you know if I can implement it on your case-study-test-article-page.html file.